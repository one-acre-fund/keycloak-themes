# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- develop

pr:
- main
- develop
- feature/*

pool:
  vmImage: 'ubuntu-latest'

name: Oaf-Keycloak-Themes_$(Date:yyyyMMdd)$(Rev:.r)

steps:
- script: |
    VERSION_TAG=`git describe --abbrev=0 --tags`
    echo "##vso[task.setvariable variable=VERSION_TAG]$VERSION_TAG"

    IMAGE_TAGS="${VERSION_TAG}_$(Build.SourceVersion)"
    echo "##vso[task.setvariable variable=IMAGE_SEMANTIC_HASH]$IMAGE_TAGS"
    echo Tags: $IMAGE_TAGS
    echo "##vso[task.setvariable variable=IMAGE_TAGS]$IMAGE_TAGS"
  displayName: Get git tag

- task: Docker@2
  displayName: Login to Azure registry
  inputs:
    containerRegistry: azurecr-oaf
    command: "login"

- task: Docker@2
  displayName: Build custom plugins image
  inputs:
    containerRegistry: 'azurecr-oaf'
    repository: 'oneacrefund/keycloak-themes'
    command: 'build'
    Dockerfile: './Dockerfile'
    buildContext: '.'
    tags: '$(IMAGE_TAGS)'

- task: Docker@2
  displayName: push image to registry
  inputs:
    containerRegistry: 'azurecr-oaf'
    repository: 'oneacrefund/keycloak-themes'
    command: 'push'
    tags: '$(IMAGE_TAGS)'

- task: Bash@3
  displayName: use latest image tag
  inputs:
    targetType: 'inline'
    script: |
      sed -i 's/:latest/:$(IMAGE_TAGS)/' values.yaml
   
- task: CopyFiles@2
  displayName: Copying source files
  inputs:
    SourceFolder: './'
    Contents: '*.yaml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: Publish configuration package
  # Only publish master branch
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: 'oaf-keycloak'
    publishLocation: 'Container'